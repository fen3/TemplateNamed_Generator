const repositoryTemplate="package @@packageBasename@@.reposity;\n\nimport java.util.List;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.jdbc.core.BeanPropertyRowMapper;\nimport org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;\nimport org.springframework.jdbc.core.namedparam.MapSqlParameterSource;\nimport org.springframework.stereotype.Repository;\n\nimport @@packageBasename@@.entity.@@entityName@@;\n\n/**\n*  @@classComment@@\n*  表名 @@tableName@@\n* @author @@author@@ @@createdate@@\n*/\n\n@Repository\npublic class @@reposityName@@ {\n    @Autowired\n    private NamedParameterJdbcTemplate jdbcTemplateNamed;\n@@addMethod@@\n@@updateMethod@@\n@@getMethod@@\n@@isexistMethod@@\n}\n";const addTemplate='    public int add(@@entityName@@ @@classname@@) {\n        String sql = "INSERT INTO @@tableName@@ (@@ColumnNameComma@@) VALUES (@@ParamNameComma@@)";\n        MapSqlParameterSource paramMap = new MapSqlParameterSource();\n@@putblock@@\n        return jdbcTemplateNamed.update(sql, paramMap);\n    }\n';const updateTemplate='    public int update(@@entityName@@ @@classname@@) {\n        String sql = "@@updatesql@@";\n        MapSqlParameterSource paramMap = new MapSqlParameterSource();\n@@putblock@@\n        return jdbcTemplateNamed.update(sql, paramMap);\n    }\n';const getTemplate='    public @@entityName@@ get(@@primaryFieldClass@@ @@primaryfield@@) {\n        String sql = "SELECT @@ColumnNameComma@@ FROM @@tableName@@ WHERE  @@primary_column@@=:@@primaryfield@@;";\n        BeanPropertyRowMapper<@@entityName@@> rowMapper = new BeanPropertyRowMapper<@@entityName@@>(@@entityName@@.class);\n        MapSqlParameterSource paramMap = new MapSqlParameterSource();\n        paramMap.addValue("@@primary_column@@",@@primaryfield@@);\n        List<@@entityName@@> lst = jdbcTemplateNamed.query(sql, paramMap, rowMapper);\n        return lst.size() > 0 ? lst.get(0) : null;\n    }\n';const isexistTemplate='    public Boolean exist(@@primaryFieldClass@@ @@primaryfield@@) {\n        String sql = "SELECT 1 from @@tableName@@ WHERE @@primary_column@@=:@@primaryfield@@ LIMIT 1";\n        MapSqlParameterSource paramMap = new MapSqlParameterSource();\n        paramMap.addValue("@@primary_column@@", @@primaryfield@@);\n        Integer cnt = jdbcTemplateNamed.queryForObject(sql, paramMap, Integer.class);\n        return cnt > 0;\n    }\n';const classTemplate="package  @@packageBasename@@.entity;\n    \nimport java.io.Serializable;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;@@importdate@@\n\n/**\n*  @@classComment@@\n*  表名 @@tableName@@\n*  @author @@author@@ @@createdate@@\n*/\n\n@Data\n@NoArgsConstructor\npublic class @@entityName@@ implements Serializable {\n    \n    private static final long serialVersionUID = 1L;\n    @@fieldsBlock@@\n}\n";const fieldTemplate="\n    /**\n    * @@fieldComment@@\n    * 字段 @@columnName@@\n    */\n    private @@fieldClass@@ @@fieldName@@;\n    ";var firstUpper=function(b){if(b==null){return""}var a=b.substr(0,1).toUpperCase();return a+b.substring(1,b.length)};var tablename2ClassName=function(d){var e=d.split("_");var c="";for(var b=0,a=e.length;b<a;b++){c+=firstUpper(e[b])}return c};var underlineToCamelCase=function(e){var d=e.split("_");var c="";for(var b=0,a=d.length;b<a;b++){c+=firstUpper(d[b])}return c.substr(0,1).toLocaleLowerCase()+c.substring(1,c.length)};var replaceKeys=function(b,d){var c=b;for(k in d){var a=new RegExp("@@"+k+"@@","gm");c=c.replace(a,d[k])}return c};var toDD=function(a){return(a<10?"0":"")+a.toString()};var now_chnstr=function(){var h=new Date();var i=h.getFullYear();var g=h.getMonth()+1;var a=h.getDate();var e=h.getHours();var b=h.getMinutes();var c=h.getSeconds();var f=i.toString()+"-"+toDD(g)+"-"+toDD(a)+" "+toDD(e)+":"+toDD(b)+":"+toDD(c);return f};function genClassInfo(q){q=q.trim().replace(/'/g,"`").replace(/\"/g,"`").replace(/，/g,",").toLowerCase();while(q.includes("  ")){q=q.replace(/  /g," ")}var f=null;if(q.includes("table")&&q.includes("(")){var D=q.indexOf("table")+5;var C=q.indexOf("(");f=q.substring(D,C)}else{alert("无表名，请检查语句。")}if(f.includes("if not exists")){f=f.replace("if not exists","")}if(f.includes("`")){f=f.substring(f.indexOf("`")+1,f.lastIndexOf("`"))}else{f=f.replace(" ","").replace("\n","").replace("\t","")}var d=tablename2ClassName(f);var A=f;if(q.includes("comment=")){A=d;var z=q.substring(q.lastIndexOf("comment=")+8,q.length).replace(/`/g,"").trim();if(z.indexOf(" ")!=z.lastIndexOf(" ")){z=z.substring(z.indexOf(" ")+1,z.lastIndexOf(" ")).trim()}if(z!=null&&z.trim().length>0){var A=z}}else{if(q.includes("comment on table")){z=q.substring(q.lastIndexOf("comment on table")+17,q.length).trim();if(z.includes("`")){z=z.substring(z.index("`")+1,z.length);z=z.substring(0,z.index("`"));A=z}}}A=A.replace(/;/g,"");var E=[];var x=q.substring(q.indexOf("(")+1,q.lastIndexOf(")"));var o=/comment `(.*?)`/g;var n=x.match(o);if(n!=null){for(var w=0,v=n.length;w<v;w++){var p=n[w];if(p.indexOf(",")){x=x.replace(p,p.replace(/,/g,"，"))
}}}commentPattenStr2=/`(.*?)`/g;matchers2=x.match(commentPattenStr2);if(matchers2!=null){for(var w=0,v=matchers2.length;w<v;w++){var p=matchers2[w];if(p.indexOf(",")){x=x.replace(p,p.replace(/,/g,"，"))}}}fieldLineList=x.split(",");var B=null;var w=0;var y=false;for(var r=0,v=fieldLineList.length;r<v;r++){w++;columnLine=fieldLineList[r];columnLine=columnLine.replace(/\n/g,"").replace(/\t/g,"").trim();specialFlag=(!columnLine.includes("key")&&!columnLine.includes("constraint")&&!columnLine.includes("using")&&!columnLine.includes("unique")&&!(columnLine.includes("primary")&&columnLine.indexOf("storage")+3>columnLine.indexOf("("))&&!columnLine.includes("pctincrease")&&!columnLine.includes("buffer_pool")&&!columnLine.includes("tablespace")&&!(columnLine.includes("primary")&&w>3));if(columnLine.includes("primary key ")){var t=columnLine.indexOf("(");rightidx=columnLine.indexOf(")",t);B=columnLine.substring(t,rightidx+1).replace(/\(`/g,"").replace(/`\)/g,"").trim()}if(specialFlag){if(columnLine.length<5){continue}columnLine=columnLine.replace(/`/g," ").replace(/\"/g," ").replace(/'/g,"").replace(/  /g," ").trim();columnName=columnLine.substring(0,columnLine.indexOf(" "));fieldName=underlineToCamelCase(columnName);if(fieldName.startsWith("Is")){fieldName="is"+fieldName.substring(2,fieldName.length)}columnLine=columnLine.substring(columnLine.indexOf("`")+1,columnLine.length).trim();var g="String";if(columnLine.includes(" tinyint")){g="boolean"}else{if(columnLine.includes(" int")||columnLine.includes(" smallint")){g="Integer"}else{if(columnLine.includes(" bigint")){g="Long"}else{if(columnLine.includes(" float")){g="Float"}else{if(columnLine.includes(" double")){g="Double"}else{if(columnLine.includes(" time")||columnLine.includes(" date")||columnLine.includes(" datetime")||columnLine.includes(" timestamp")){g="Date";y=true}else{if(columnLine.includes(" varchar")||columnLine.includes(" text")||columnLine.includes(" char")||columnLine.includes(" clob")||columnLine.includes(" blob")||columnLine.includes(" json")){g="String"}else{if(columnLine.includes(" boolean")){g="boolean"}else{if(columnLine.includes(" decimal")||columnLine.includes(" number")){var c=columnLine.indexOf("(");if(c>=0){var m=columnLine.indexOf(")",c);var u=columnLine.substring(c+1,m).split("，");if((u.length>1&&"0"==u[0])||u.length==1){var j=Number(u[0]);if(u.length>1){j=Number(u[1])}if(j<=9){g="Integer"}else{g="Long"}}else{g="BigDecimal"}}else{g="BigDecimal"}}else{g="String"}}}}}}}}}var a=columnName;if(q.includes("comment on column")&&(q.includes("."+columnName+" is ")||q.includes(".`"+columnName+"` is"))){q=q.replace(".`"+columnName+"` is","."+columnName+" is");rc="/."+columnName+" is `/g";matchers3=q.match(rc);for(var w=0,v=matchers3.length;w<v;w++){columnCommentTmp=matchers3[w];a=q.substring(q.indexOf(columnCommentTmp)+columnCommentTmp.length,q.length).trim();a=a.substring(0,a.indexOf("`")).trim()}}else{if(columnLine.includes(" comment")){commentTmp=columnLine.substring(columnLine.lastIndexOf("comment")+7,columnLine.length).trim();if(commentTmp.includes("`")||commentTmp.indexOf("`")!=commentTmp.lastIndexOf("`")){commentTmp=commentTmp.substring(commentTmp.indexOf("`")+1,commentTmp.lastIndexOf("`"))}if(commentTmp.includes(")")){commentTmp=commentTmp.substring(0,commentTmp.lastIndexOf(")")+1)}a=commentTmp}}fieldInfo={"columnName":columnName,"fieldName":fieldName,"FieldName":firstUpper(fieldName),"fieldClass":g,"fieldComment":a};E.push(fieldInfo)}if(E.length<1){alert("错误")}}var s=null;var h=null;var l=null;for(var w=0,v=E.length;w<v;w++){if(E[w]["columnName"]==B){s=E[w];h=s["fieldName"];l=s["fieldClass"]}}codeJavaInfo={"tableName":f,"className":d,"entityName":d+"Entity","reposityName":d+"Reposity","classComment":A,"primary_column":B,"primaryFieldName":firstUpper(h),"primaryField":h,"primaryFieldClass":l,"fieldList":E,"has_date":y};return codeJavaInfo}GetClassInfo=function(a,b){classInfo=genClassInfo(a);classInfo["primaryfield"]=classInfo["primaryField"].toLowerCase();classInfo["author"]=b["name"]+"  email: "+b["email"];classInfo["packageBasename"]=b["packageBasename"];classInfo["createdate"]=now_chnstr();return classInfo};function getColumnNameComma(e){var b=[];for(var c=0,a=e["fieldList"].length;c<a;c++){var d=codeJavaInfo["fieldList"][c];b.push(d["columnName"])}return b.join(", ")}function getParamNameComma(e){var b=[];for(var c=0,a=e["fieldList"].length;c<a;c++){var d=e["fieldList"][c];b.push(":"+d["fieldName"].toLowerCase())}return b.join(", ")}function getPutBlock(f){var b=[];for(var d=0,a=f["fieldList"].length;d<a;d++){var e=f["fieldList"][d];var c='        paramMap.addValue("'+e["fieldName"].toLowerCase()+'", '+f["className"].toLowerCase()+"."+((e["fieldName"].startsWith("is")?e["fieldName"]:"get"+e["FieldName"])+"());");b.push(c)}return b.join("\n")}function getUpdateSql(f){var d=[];var b="";for(var c=0,a=f["fieldList"].length;c<a;c++){var e=f["fieldList"][c];if(e["columnName"]!=f["primary_column"]){d.push(e["columnName"]+"=:"+e["fieldName"].toLowerCase())
}else{b=e["columnName"]+"=:"+e["fieldName"].toLowerCase()}}sql=" UPDATE "+f["tableName"]+" SET "+d.join(", ")+" WHERE "+b;return sql}function getAddMethod(a){return replaceKeys(addTemplate,a)}function getUpdateMethod(a){return replaceKeys(updateTemplate,a)}function getIsExistMethod(a){return replaceKeys(isexistTemplate,a)}function getGetMethod(a){return replaceKeys(getTemplate,a)}function genFieldsBlock(e){var c=e["fieldList"];var b=[];for(var d=0,a=c.length;d<a;d++){b.push(replaceKeys(fieldTemplate,c[d]))}return b.join("\n")}function genEntity(a){a["fieldsBlock"]=genFieldsBlock(a);a["importdate"]=(a["has_date"]?"\nimport java.util.Date;":"");return replaceKeys(classTemplate,a)}function getRepositoryClass(a){a["putblock"]=getPutBlock(a);a["classname"]=a["className"].toLowerCase();a["ColumnNameComma"]=getColumnNameComma(a);a["ParamNameComma"]=getParamNameComma(a);a["updatesql"]=getUpdateSql(a);a["addMethod"]=getAddMethod(a);a["updateMethod"]=getUpdateMethod(a);a["getMethod"]=getGetMethod(a);a["isexistMethod"]=getIsExistMethod(a);return replaceKeys(repositoryTemplate,a)};
