const repositoryTemplate="package @@packageBasename@@.reposity;\n\nimport java.util.List;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.jdbc.core.BeanPropertyRowMapper;\nimport org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;\nimport org.springframework.jdbc.core.namedparam.MapSqlParameterSource;\nimport org.springframework.stereotype.Repository;\n\nimport @@packageBasename@@.entity.@@entityName@@;\n\n/**\n*  @@classComment@@\n*  表名 @@tableName@@\n* @author @@author@@ @@createdate@@\n*/\n\n@Repository\npublic class @@reposityName@@ {\n    @Autowired\n    private NamedParameterJdbcTemplate jdbcTemplateNamed;\n@@addMethod@@\n@@updateMethod@@\n@@getMethod@@\n@@isexistMethod@@\n}\n";const addTemplate='    public int add(@@entityName@@ @@classname@@) {\n        String sql = "INSERT INTO @@tableName@@ (@@ColumnNameComma@@) VALUES (@@ParamNameComma@@)";\n        MapSqlParameterSource paramMap = new MapSqlParameterSource();\n@@putblock@@\n        return jdbcTemplateNamed.update(sql, paramMap);\n    }\n';const updateTemplate='    public int update(@@entityName@@ @@classname@@) {\n        String sql = "@@updatesql@@";\n        MapSqlParameterSource paramMap = new MapSqlParameterSource();\n@@putblock@@\n        return jdbcTemplateNamed.update(sql, paramMap);\n    }\n';const getTemplate='    public @@entityName@@ get(@@primaryFieldClass@@ @@primaryfield@@) {\n        String sql = "SELECT @@ColumnNameComma@@ FROM @@tableName@@ WHERE  @@primary_column@@=:@@primaryfield@@;";\n        BeanPropertyRowMapper<@@entityName@@> rowMapper = new BeanPropertyRowMapper<@@entityName@@>(@@entityName@@.class);\n        MapSqlParameterSource paramMap = new MapSqlParameterSource();\n        paramMap.addValue("@@primary_column@@",@@primaryfield@@);\n        List<@@entityName@@> lst = jdbcTemplateNamed.query(sql, paramMap, rowMapper);\n        return lst.size() > 0 ? lst.get(0) : null;\n    }\n';const isexistTemplate='    public Boolean exist(@@primaryFieldClass@@ @@primaryfield@@) {\n        String sql = "SELECT 1 from @@tableName@@ WHERE @@primary_column@@=:@@primaryfield@@ LIMIT 1";\n        MapSqlParameterSource paramMap = new MapSqlParameterSource();\n        paramMap.addValue("@@primary_column@@", @@primaryfield@@);\n        Integer cnt = jdbcTemplateNamed.queryForObject(sql, paramMap, Integer.class);\n        return cnt > 0;\n    }\n';const classTemplate="package  @@packageBasename@@.entity;\n    \nimport java.io.Serializable;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;@@importdate@@\n\n/**\n*  @@classComment@@\n*  表名 @@tableName@@\n*  @author @@author@@ @@createdate@@\n*/\n\n@Data\n@NoArgsConstructor\npublic class @@entityName@@ implements Serializable {\n    \n    private static final long serialVersionUID = 1L;\n    @@fieldsBlock@@\n}\n";const fieldTemplate="\n    /**\n    * @@fieldComment@@\n    * 字段 @@columnName@@\n    */\n    private @@fieldClass@@ @@fieldName@@;\n    ";var firstUpper=function(val){if(val==null){return""}var f=val.substr(0,1).toUpperCase();return f+val.substring(1,val.length)};var tablename2ClassName=function(tablename){var parts=tablename.split("_");var className="";for(var i=0,max=parts.length;i<max;i++){className+=firstUpper(parts[i])}return className};var underlineToCamelCase=function(val){var parts=val.split("_");var CamelCase="";for(var i=0,max=parts.length;i<max;i++){CamelCase+=firstUpper(parts[i])}return CamelCase.substr(0,1).toLocaleLowerCase()+CamelCase.substring(1,CamelCase.length)};var replaceKeys=function(strtemplate,classInfo){var rst=strtemplate;for(k in classInfo){var re=new RegExp("@@"+k+"@@","gm");rst=rst.replace(re,classInfo[k])}return rst};var toDD=function(val){return(val<10?"0":"")+val.toString()};var now_chnstr=function(){var d=new Date();var yyyy=d.getFullYear();var mm=d.getMonth()+1;var dd=d.getDate();var hh=d.getHours();var mi=d.getMinutes();var ss=d.getSeconds();var rst=yyyy.toString()+"-"+toDD(mm)+"-"+toDD(dd)+" "+toDD(hh)+":"+toDD(mi)+":"+toDD(ss);return rst};function genClassInfo(tableSql){tableSql=tableSql.trim().replace(/'/g,"`").replace(/\"/g,"`").replace(/，/g,",").toLowerCase();while(tableSql.includes("  ")){tableSql=tableSql.replace(/  /g," ")}var tableName=null;if(tableSql.includes("table")&&tableSql.includes("(")){var b=tableSql.indexOf("table")+5;var e=tableSql.indexOf("(");tableName=tableSql.substring(b,e)}else{alert("无表名，请检查语句。")}if(tableName.includes("if not exists")){tableName=tableName.replace("if not exists","")}if(tableName.includes("`")){tableName=tableName.substring(tableName.indexOf("`")+1,tableName.lastIndexOf("`"))}else{tableName=tableName.replace(" ","").replace("\n","").replace("\t","")}var className=tablename2ClassName(tableName);var classComment=tableName;if(tableSql.includes("comment=")){classComment=className;var classCommentTmp=tableSql.substring(tableSql.lastIndexOf("comment=")+8,tableSql.length).replace(/`/g,"").trim();if(classCommentTmp.indexOf(" ")!=classCommentTmp.lastIndexOf(" ")){classCommentTmp=classCommentTmp.substring(classCommentTmp.indexOf(" ")+1,classCommentTmp.lastIndexOf(" ")).trim()
}if(classCommentTmp!=null&&classCommentTmp.trim().length>0){var classComment=classCommentTmp}}else{if(tableSql.includes("comment on table")){classCommentTmp=tableSql.substring(tableSql.lastIndexOf("comment on table")+17,tableSql.length).trim();if(classCommentTmp.includes("`")){classCommentTmp=classCommentTmp.substring(classCommentTmp.index("`")+1,classCommentTmp.length);classCommentTmp=classCommentTmp.substring(0,classCommentTmp.index("`"));classComment=classCommentTmp}}}classComment=classComment.replace(/;/g,"");var fieldList=[];var fieldListTmp=tableSql.substring(tableSql.indexOf("(")+1,tableSql.lastIndexOf(")"));var commentPattenStr1=/comment `(.*?)`/g;var matchers1=fieldListTmp.match(commentPattenStr1);if(matchers1!=null){for(var i=0,max=matchers1.length;i<max;i++){var cmt=matchers1[i];if(cmt.indexOf(",")){fieldListTmp=fieldListTmp.replace(cmt,cmt.replace(/,/g,"，"))}}}commentPattenStr2=/`(.*?)`/g;matchers2=fieldListTmp.match(commentPattenStr2);if(matchers2!=null){for(var i=0,max=matchers2.length;i<max;i++){var cmt=matchers2[i];if(cmt.indexOf(",")){fieldListTmp=fieldListTmp.replace(cmt,cmt.replace(/,/g,"，"))}}}fieldLineList=fieldListTmp.split(",");var primary_column=null;var i=0;var has_date=false;for(var idx=0,max=fieldLineList.length;idx<max;idx++){i++;columnLine=fieldLineList[idx];columnLine=columnLine.replace(/\n/g,"").replace(/\t/g,"").trim();specialFlag=(!columnLine.includes("key")&&!columnLine.includes("constraint")&&!columnLine.includes("using")&&!columnLine.includes("unique")&&!(columnLine.includes("primary")&&columnLine.indexOf("storage")+3>columnLine.indexOf("("))&&!columnLine.includes("pctincrease")&&!columnLine.includes("buffer_pool")&&!columnLine.includes("tablespace")&&!(columnLine.includes("primary")&&i>3));if(columnLine.includes("primary key ")){var leftidx=columnLine.indexOf("(");rightidx=columnLine.indexOf(")",leftidx);primary_column=columnLine.substring(leftidx,rightidx+1).replace(/\(`/g,"").replace(/`\)/g,"").trim()}if(specialFlag){if(columnLine.length<5){continue}columnLine=columnLine.replace(/`/g," ").replace(/\"/g," ").replace(/'/g,"").replace(/  /g," ").trim();columnName=columnLine.substring(0,columnLine.indexOf(" "));fieldName=underlineToCamelCase(columnName);if(fieldName.startsWith("Is")){fieldName="is"+fieldName.substring(2,fieldName.length)}columnLine=columnLine.substring(columnLine.indexOf("`")+1,columnLine.length).trim();var fieldClass="String";if(columnLine.includes(" tinyint")){fieldClass="boolean"}else{if(columnLine.includes(" int")||columnLine.includes(" smallint")){fieldClass="Integer"}else{if(columnLine.includes(" bigint")){fieldClass="Long"}else{if(columnLine.includes(" float")){fieldClass="Float"}else{if(columnLine.includes(" double")){fieldClass="Double"}else{if(columnLine.includes(" time")||columnLine.includes(" date")||columnLine.includes(" datetime")||columnLine.includes(" timestamp")){fieldClass="Date";has_date=true}else{if(columnLine.includes(" varchar")||columnLine.includes(" text")||columnLine.includes(" char")||columnLine.includes(" clob")||columnLine.includes(" blob")||columnLine.includes(" json")){fieldClass="String"}else{if(columnLine.includes(" boolean")){fieldClass="boolean"}else{if(columnLine.includes(" decimal")||columnLine.includes(" number")){var startKh=columnLine.indexOf("(");if(startKh>=0){var endKh=columnLine.indexOf(")",startKh);var fanwei=columnLine.substring(startKh+1,endKh).split("，");if((fanwei.length>1&&"0"==fanwei[0])||fanwei.length==1){var llll=Number(fanwei[0]);if(fanwei.length>1){llll=Number(fanwei[1])}if(llll<=9){fieldClass="Integer"}else{fieldClass="Long"}}else{fieldClass="BigDecimal"}}else{fieldClass="BigDecimal"}}else{fieldClass="String"}}}}}}}}}var fieldComment=columnName;if(tableSql.includes("comment on column")&&(tableSql.includes("."+columnName+" is ")||tableSql.includes(".`"+columnName+"` is"))){tableSql=tableSql.replace(".`"+columnName+"` is","."+columnName+" is");rc="/."+columnName+" is `/g";matchers3=tableSql.match(rc);for(var i=0,max=matchers3.length;i<max;i++){columnCommentTmp=matchers3[i];fieldComment=tableSql.substring(tableSql.indexOf(columnCommentTmp)+columnCommentTmp.length,tableSql.length).trim();fieldComment=fieldComment.substring(0,fieldComment.indexOf("`")).trim()}}else{if(columnLine.includes(" comment")){commentTmp=columnLine.substring(columnLine.lastIndexOf("comment")+7,columnLine.length).trim();if(commentTmp.includes("`")||commentTmp.indexOf("`")!=commentTmp.lastIndexOf("`")){commentTmp=commentTmp.substring(commentTmp.indexOf("`")+1,commentTmp.lastIndexOf("`"))}if(commentTmp.includes(")")){commentTmp=commentTmp.substring(0,commentTmp.lastIndexOf(")")+1)}fieldComment=commentTmp}}fieldInfo={"columnName":columnName,"fieldName":fieldName,"FieldName":firstUpper(fieldName),"fieldClass":fieldClass,"fieldComment":fieldComment};fieldList.push(fieldInfo)}if(fieldList.length<1){alert("错误")}}var primaryFieldInfo=null;var primaryField=null;var primaryFieldClass=null;for(var i=0,max=fieldList.length;i<max;i++){if(fieldList[i]["columnName"]==primary_column){primaryFieldInfo=fieldList[i];
primaryField=primaryFieldInfo["fieldName"];primaryFieldClass=primaryFieldInfo["fieldClass"]}}codeJavaInfo={"tableName":tableName,"className":className,"entityName":className+"Entity","reposityName":className+"Reposity","classComment":classComment,"primary_column":primary_column,"primaryFieldName":firstUpper(primaryField),"primaryField":primaryField,"primaryFieldClass":primaryFieldClass,"fieldList":fieldList,"has_date":has_date};return codeJavaInfo}GetClassInfo=function(tableSql,authorInfo){classInfo=genClassInfo(tableSql);classInfo["primaryfield"]=classInfo["primaryField"].toLowerCase();classInfo["author"]=authorInfo["name"]+"  email: "+authorInfo["email"];classInfo["packageBasename"]=authorInfo["packageBasename"];classInfo["createdate"]=now_chnstr();return classInfo};function getColumnNameComma(classInfo){var fieldNameList=[];for(var i=0,max=classInfo["fieldList"].length;i<max;i++){var field=codeJavaInfo["fieldList"][i];fieldNameList.push(field["columnName"])}return fieldNameList.join(", ")}function getParamNameComma(classInfo){var fieldNameList=[];for(var i=0,max=classInfo["fieldList"].length;i<max;i++){var field=classInfo["fieldList"][i];fieldNameList.push(":"+field["fieldName"].toLowerCase())}return fieldNameList.join(", ")}function getPutBlock(classInfo){var fieldNameList=[];for(var i=0,max=classInfo["fieldList"].length;i<max;i++){var field=classInfo["fieldList"][i];var line='        paramMap.addValue("'+field["fieldName"].toLowerCase()+'", '+classInfo["className"].toLowerCase()+"."+((field["fieldName"].startsWith("is")?field["fieldName"]:"get"+field["FieldName"])+"());");fieldNameList.push(line)}return fieldNameList.join("\n")}function getUpdateSql(classInfo){var setColumns=[];var wherestr="";for(var i=0,max=classInfo["fieldList"].length;i<max;i++){var field=classInfo["fieldList"][i];if(field["columnName"]!=classInfo["primary_column"]){setColumns.push(field["columnName"]+"=:"+field["fieldName"].toLowerCase())}else{wherestr=field["columnName"]+"=:"+field["fieldName"].toLowerCase()}}sql=" UPDATE "+classInfo["tableName"]+" SET "+setColumns.join(", ")+" WHERE "+wherestr;return sql}function getAddMethod(classInfo){return replaceKeys(addTemplate,classInfo)}function getUpdateMethod(classInfo){return replaceKeys(updateTemplate,classInfo)}function getIsExistMethod(classInfo){return replaceKeys(isexistTemplate,classInfo)}function getGetMethod(classInfo){return replaceKeys(getTemplate,classInfo)}function genFieldsBlock(classInfo){var fieldList=classInfo["fieldList"];var lst=[];for(var i=0,max=fieldList.length;i<max;i++){lst.push(replaceKeys(fieldTemplate,fieldList[i]))}return lst.join("\n")}function genEntity(classInfo){classInfo["fieldsBlock"]=genFieldsBlock(classInfo);classInfo["importdate"]=(classInfo["has_date"]?"\nimport java.util.Date;":"");return replaceKeys(classTemplate,classInfo)}function getRepositoryClass(classInfo){classInfo["putblock"]=getPutBlock(classInfo);classInfo["classname"]=classInfo["className"].toLowerCase();classInfo["ColumnNameComma"]=getColumnNameComma(classInfo);classInfo["ParamNameComma"]=getParamNameComma(classInfo);classInfo["updatesql"]=getUpdateSql(classInfo);classInfo["addMethod"]=getAddMethod(classInfo);classInfo["updateMethod"]=getUpdateMethod(classInfo);classInfo["getMethod"]=getGetMethod(classInfo);classInfo["isexistMethod"]=getIsExistMethod(classInfo);return replaceKeys(repositoryTemplate,classInfo)};
