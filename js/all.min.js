const repositoryTemplate="package @@packageBasename@@.reposity;\n\nimport java.util.List;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.jdbc.core.BeanPropertyRowMapper;\nimport org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;\nimport org.springframework.jdbc.core.namedparam.MapSqlParameterSource;\nimport org.springframework.stereotype.Repository;\n\nimport @@packageBasename@@.entity.@@entityName@@;\n\n/**\n*  @@classComment@@\n*  \u8868\u540D @@tableName@@\n* @author @@author@@ @@createdate@@\n*/\n\n@Repository\npublic class @@reposityName@@ {\n    @Autowired\n    private NamedParameterJdbcTemplate jdbcTemplateNamed;\n@@addMethod@@\n@@updateMethod@@\n@@getMethod@@\n@@isexistMethod@@\n}\n",addTemplate="    public int add(@@entityName@@ @@classname@@) {\n        String sql = \"INSERT INTO @@tableName@@ (@@ColumnNameComma@@) VALUES (@@ParamNameComma@@)\";\n        MapSqlParameterSource paramMap = new MapSqlParameterSource();\n@@putblock@@\n        return jdbcTemplateNamed.update(sql, paramMap);\n    }\n",updateTemplate="    public int update(@@entityName@@ @@classname@@) {\n        String sql = \"@@updatesql@@\";\n        MapSqlParameterSource paramMap = new MapSqlParameterSource();\n@@putblock@@\n        return jdbcTemplateNamed.update(sql, paramMap);\n    }\n",getTemplate="    public @@entityName@@ get(@@primaryFieldClass@@ @@primaryfield@@) {\n        String sql = \"SELECT @@ColumnNameComma@@ FROM @@tableName@@ WHERE  @@primary_column@@=:@@primaryfield@@;\";\n        BeanPropertyRowMapper<@@entityName@@> rowMapper = new BeanPropertyRowMapper<@@entityName@@>(@@entityName@@.class);\n        MapSqlParameterSource paramMap = new MapSqlParameterSource();\n        paramMap.addValue(\"@@primary_column@@\",@@primaryfield@@);\n        List<@@entityName@@> lst = jdbcTemplateNamed.query(sql, paramMap, rowMapper);\n        return lst.size() > 0 ? lst.get(0) : null;\n    }\n",isexistTemplate="    public Boolean exist(@@primaryFieldClass@@ @@primaryfield@@) {\n        String sql = \"SELECT 1 from @@tableName@@ WHERE @@primary_column@@=:@@primaryfield@@ LIMIT 1\";\n        MapSqlParameterSource paramMap = new MapSqlParameterSource();\n        paramMap.addValue(\"@@primary_column@@\", @@primaryfield@@);\n        Integer cnt = jdbcTemplateNamed.queryForObject(sql, paramMap, Integer.class);\n        return cnt > 0;\n    }\n",classTemplate="package  @@packageBasename@@.entity;\n    \nimport java.io.Serializable;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;@@importdate@@\n\n/**\n*  @@classComment@@\n*  \u8868\u540D @@tableName@@\n*  @author @@author@@ @@createdate@@\n*/\n\n@Data\n@NoArgsConstructor\npublic class @@entityName@@ implements Serializable {\n    \n    private static final long serialVersionUID = 1L;\n    @@fieldsBlock@@\n}\n",fieldTemplate="\n    /**\n    * @@fieldComment@@\n    * \u5B57\u6BB5 @@columnName@@\n    */\n    private @@fieldClass@@ @@fieldName@@;\n    ";var firstUpper=function(a){if(null==a)return"";var b=a.substr(0,1).toUpperCase();return b+a.substring(1,a.length)},tablename2ClassName=function(a){let b=a.split("_"),c="";return b.forEach(a=>{c+=firstUpper(a)}),c};let underlineToCamelCase=function(a){let b=a.split("_"),c="";for(let d=0,e=b.length;d<e;d++)c+=firstUpper(b[d]);return c.substr(0,1).toLocaleLowerCase()+c.substring(1,c.length)},replaceKeys=function(a,b){let c=a;for(k in b){let a=new RegExp("@@"+k+"@@","gm");c=c.replace(a,b[k])}return c},toDD=function(a){return(10>a?"0":"")+a.toString()};var now_chnstr=function(){let a=new Date,b=a.getFullYear(),c=a.getMonth()+1,d=a.getDate(),e=a.getHours(),f=a.getMinutes(),g=a.getSeconds(),h=b.toString()+"-"+toDD(c)+"-"+toDD(d)+" "+toDD(e)+":"+toDD(f)+":"+toDD(g);return h};function genClassInfo(a){for(a=a.trim().replace(/'/g,"`").replace(/\"/g,"`").replace(/ï¼Œ/g,",").toLowerCase();a.includes("  ");)a=a.replace(/  /g," ");let c=null;if(a.includes("table")&&a.includes("(")){let d=a.indexOf("table")+5,b=a.indexOf("(");c=a.substring(d,b)}else alert("\u65E0\u8868\u540D\uFF0C\u8BF7\u68C0\u67E5\u8BED\u53E5\u3002");c.includes("if not exists")&&(c=c.replace("if not exists","")),c=c.includes("`")?c.substring(c.indexOf("`")+1,c.lastIndexOf("`")):c.replace(" ","").replace("\n","").replace("\t","");let d=tablename2ClassName(c),e=c;if(a.includes("comment=")){e=d;let b=a.substring(a.lastIndexOf("comment=")+8,a.length).replace(/`/g,"").trim();if(b.indexOf(" ")!=b.lastIndexOf(" ")&&(b=b.substring(b.indexOf(" ")+1,b.lastIndexOf(" ")).trim()),null!=b&&0<b.trim().length){}}else a.includes("comment on table")&&(classCommentTmp=a.substring(a.lastIndexOf("comment on table")+17,a.length).trim(),classCommentTmp.includes("`")&&(classCommentTmp=classCommentTmp.substring(classCommentTmp.index("`")+1,classCommentTmp.length),classCommentTmp=classCommentTmp.substring(0,classCommentTmp.index("`")),e=classCommentTmp));e=e.replace(/;/g,"");let f=[],g=a.substring(a.indexOf("(")+1,a.lastIndexOf(")")),h=g.match(/comment `(.*?)`/g);null!=h&&h.forEach(a=>{a.indexOf(",")&&(g=g.replace(a,a.replace(/,/g,"\uFF0C")))}),commentPattenStr2=/`(.*?)`/g,matchers2=g.match(commentPattenStr2),null!=matchers2&&matchers2.forEach(a=>{a.indexOf(",")&&(g=g.replace(a,a.replace(/,/g,"\uFF0C")))});let j=g.split(","),l=null,m=0,b=!1;j.forEach(c=>{if(m++,c=c.replace(/\n/g,"").replace(/\t/g,"").trim(),specialFlag=!c.includes("key")&&!c.includes("constraint")&&!c.includes("using")&&!c.includes("unique")&&!(c.includes("primary")&&c.indexOf("storage")+3>c.indexOf("("))&&!c.includes("pctincrease")&&!c.includes("buffer_pool")&&!c.includes("tablespace")&&!(c.includes("primary")&&3<m),c.includes("primary key ")){let a=c.indexOf("("),b=c.indexOf(")",a);l=c.substring(a,b+1).replace(/\(`/g,"").replace(/`\)/g,"").trim()}if(specialFlag&&5<=c.length){c=c.replace(/`/g," ").replace(/\"/g," ").replace(/'/g,"").replace(/  /g," ").trim();let d=c.substring(0,c.indexOf(" ")),e=underlineToCamelCase(d);e.startsWith("Is")&&(e="is"+e.substring(2,e.length)),c=c.substring(c.indexOf("`")+1,c.length).trim();let g="String";if(c.includes(" tinyint"))g="boolean";else if(c.includes(" int")||c.includes(" smallint"))g="Integer";else if(c.includes(" bigint"))g="Long";else if(c.includes(" float"))g="Float";else if(c.includes(" double"))g="Double";else if(c.includes(" time")||c.includes(" date")||c.includes(" datetime")||c.includes(" timestamp"))g="Date",b=!0;else if(c.includes(" varchar")||c.includes(" text")||c.includes(" char")||c.includes(" clob")||c.includes(" blob")||c.includes(" json"))g="String";else if(c.includes(" boolean"))g="boolean";else if(c.includes(" decimal")||c.includes(" number")){let a=c.indexOf("(");if(0<=a){let b=c.indexOf(")",a),d=c.substring(a+1,b).split("\uFF0C");if(1<d.length&&"0"==d[0]||1==d.length){let a=+d[0];1<d.length&&(a=+d[1]),g=9>=a?"Integer":"Long"}else g="BigDecimal"}else g="BigDecimal"}else g="String";let h=d;if(a.includes("comment on column")&&(a.includes("."+d+" is ")||a.includes(".`"+d+"` is"))){a=a.replace(".`"+d+"` is","."+d+" is");let b=a.match("/."+d+" is `/g");null!=b&&b.forEach(b=>{h=a.substring(a.indexOf(b)+b.length,a.length).trim(),h=h.substring(0,h.indexOf("`")).trim()})}else if(c.includes(" comment")){let a=c.substring(c.lastIndexOf("comment")+7,c.length).trim();(a.includes("`")||a.indexOf("`")!=a.lastIndexOf("`"))&&(a=a.substring(a.indexOf("`")+1,a.lastIndexOf("`"))),a.includes(")")&&(a=a.substring(0,a.lastIndexOf(")")+1)),h=a}let i={columnName:d,fieldName:e,FieldName:firstUpper(e),fieldClass:g,fieldComment:h};f.push(i)}1>f.length&&alert("\u9519\u8BEF")});let n=null,o=null,p=null;for(let b=0,c=f.length;b<c;b++)f[b].columnName==l&&(n=f[b],o=n.fieldName,p=n.fieldClass);let q={tableName:c,className:d,entityName:d+"Entity",reposityName:d+"Reposity",classComment:e,primary_column:l,primaryFieldName:firstUpper(o),primaryField:o,primaryFieldClass:p,fieldList:f,has_date:b};return q}GetClassInfo=function(a,b){return classInfo=genClassInfo(a),classInfo.primaryfield=classInfo.primaryField.toLowerCase(),classInfo.author=b.name+"  email: "+b.email,classInfo.packageBasename=b.packageBasename,classInfo.createdate=now_chnstr(),classInfo};function getColumnNameComma(a){let b=[];return a.fieldList.forEach(a=>{b.push(a.columnName)}),b.join(", ")}function getParamNameComma(a){let b=[];return a.fieldList.forEach(a=>{b.push(":"+a.fieldName.toLowerCase())}),b.join(", ")}function getPutBlock(a){let b=[];return a.fieldList.forEach(c=>{let d="        paramMap.addValue(\""+c.fieldName.toLowerCase()+"\", "+a.className.toLowerCase()+"."+((c.fieldName.startsWith("is")?c.fieldName:"get"+c.FieldName)+"());");b.push(d)}),b.join("\n")}function getUpdateSql(a){let b=[],c="";a.fieldList.forEach(d=>{d.columnName==a.primary_column?c=d.columnName+"=:"+d.fieldName.toLowerCase():b.push(d.columnName+"=:"+d.fieldName.toLowerCase())});let d=" UPDATE "+a.tableName+" SET "+b.join(", ")+" WHERE "+c;return d}function getAddMethod(a){return replaceKeys(addTemplate,a)}function getUpdateMethod(a){return replaceKeys(updateTemplate,a)}function getIsExistMethod(a){return replaceKeys(isexistTemplate,a)}function getGetMethod(a){return replaceKeys(getTemplate,a)}function genFieldsBlock(a){let b=[];return a.fieldList.forEach(a=>{b.push(replaceKeys(fieldTemplate,a))}),b.join("\n")}function genEntity(a){return a.fieldsBlock=genFieldsBlock(a),a.importdate=a.has_date?"\nimport java.util.Date;":"",replaceKeys(classTemplate,a)}function getRepositoryClass(a){return a.putblock=getPutBlock(a),a.classname=a.className.toLowerCase(),a.ColumnNameComma=getColumnNameComma(a),a.ParamNameComma=getParamNameComma(a),a.updatesql=getUpdateSql(a),a.addMethod=getAddMethod(a),a.updateMethod=getUpdateMethod(a),a.getMethod=getGetMethod(a),a.isexistMethod=getIsExistMethod(a),replaceKeys(repositoryTemplate,a)}
